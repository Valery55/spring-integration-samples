<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd">

	<int:management counts-enabled-patterns="*" stats-enabled-patterns="*" />

	<int-http:inbound-gateway id="httpPostIn"
							request-channel="receiveChannel"
							path="/postGateway"
							error-channel="errorChannel"
							supported-methods="POST"/>

	<int-http:inbound-gateway id="httpGetIn"
							request-channel="createPayload"
							path="/getGateway"
							error-channel="errorChannel"
							supported-methods="GET"/>

	<int:transformer id="payloadForGet"
		input-channel="createPayload" output-channel="receiveChannel" expression="'A,B,C'" />

	<int:channel id="receiveChannel" />

	<int:header-enricher id="headerEnricher" input-channel="receiveChannel" output-channel="processChannel">
		<int:header name="ackCorrelation" expression="headers['id']" />
	</int:header-enricher>

	<int:publish-subscribe-channel id="processChannel" />

	<int:header-filter id="filterHeaders" header-names="content-type, content-length" order="1"
			input-channel="processChannel" output-channel="split"/>

	<int:splitter id="splitter" delimiters="," input-channel="split" output-channel="toRabbit"/>

	<int:channel id="toRabbit" />

	<int-amqp:outbound-channel-adapter id="amqpOutboundWithConfirmations"
		channel="toRabbit"
		amqp-template="rabbitTemplate"
		exchange-name="barrier.sample.exchange" routing-key="barrier.sample.key"
		confirm-ack-channel="confirmations"
		confirm-nack-channel="confirmations"
		return-channel="errorChannel"
		confirm-correlation-expression="#this"/>

	<!-- Suspend the HTTP thread until the publisher confirms are asynchronously received -->

	<int:barrier id="barrier" input-channel="processChannel" order="2"
		correlation-strategy-expression="headers['ackCorrelation']"
		output-channel="transform" timeout="10000" />

	<int:transformer id="resultTransformer" input-channel="transform" expression="payload[1]" />

	<!-- Aggregate the publisher confirms and send the result to the barrier release channel -->

	<int:aggregator id="confirmationsAggregator" input-channel="confirmations" output-channel="release">
		<bean class="org.springframework.integration.samples.barrier.AckAggregator" />
	</int:aggregator>

	<int:channel id="release" />

	<int:outbound-channel-adapter id="barrier.releaser" channel="release" ref="barrier.handler" method="trigger" />

	<!-- Consumer -> nullChannel -->

	<int-amqp:inbound-channel-adapter id="amqpIn"
		channel="nullChannel"
		queue-names="barrier.sample.queue"
		connection-factory="rabbitConnectionFactory" />
	
	<!-- Infrastructure -->

	<rabbit:queue name="barrier.sample.queue" auto-delete="true" />

	<rabbit:direct-exchange name="barrier.sample.exchange" auto-delete="true">
		<rabbit:bindings>
			<rabbit:binding queue="barrier.sample.queue" key="barrier.sample.key" />
		</rabbit:bindings>
	</rabbit:direct-exchange>

</beans>
